{"version":3,"sources":["Sidebar/index.js","Header/index.js","Calendar/event-utils.js","Calendar/Popup/index.js","Calendar/index.js","App.js","serviceWorker.js","index.js","assets/images/help.svg","assets/images/home.svg","assets/images/inbox.svg","assets/images/invoices.svg","assets/images/settings.svg","assets/images/search.svg","assets/images/badge.svg","assets/images/arrow.svg","assets/images/avatar.png"],"names":["Sidebar","className","src","Home","alt","icon","faPoll","Inbox","faTable","Invoices","faUser","faComments","faCalendarAlt","Help","Settings","Header","Search","type","name","placeholder","faBell","Badge","Arrow","Avatar","eventGuid","todayStr","Date","toISOString","replace","INITIAL_EVENTS","id","createEventId","title","start","extendedProps","halo","String","Popup","props","useState","selectedDate","setSelectedDate","allDay","setAllDay","setTitle","time","setTime","note","setNote","setId","useEffect","popupData","selectInfo","popupState","moment","startStr","length","utc","getHours","format","event","_def","_instance","range","subtract","style","position","left","jsEvent","pageX","top","pageY","onClick","closePopup","faTimesCircle","width","height","d","fill","stroke","stroke-width","TextField","label","value","onChange","e","target","substr","utils","DateFnsUtils","disableToolbar","variant","margin","KeyboardButtonProps","FormControlLabel","control","Checkbox","checked","color","endAdornment","InputAdornment","faClock","defaultValue","InputLabelProps","shrink","inputProps","step","remove","tz","calendarApi","addEvent","view","calendar","DemoApp","state","weekendsVisible","currentEvents","handleWeekendsToggle","setState","handleDateSelect","unselect","handleEventClick","clickInfo","handleEvents","events","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","center","right","customButtons","Agenda","text","click","alert","buttonText","today","prev","next","initialView","slotLabelFormat","hour","minute","hour12","slotDuration","expandRows","editable","selectable","selectMirror","dayMaxEvents","weekends","this","initialEvents","select","eventContent","renderEventContent","eventClick","eventsSet","React","Component","eventInfo","timeText","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.04bd7d85.chunk.js","sourcesContent":["import React from 'react';\nimport Home from '../assets/images/home.svg';\nimport Help from '../assets/images/help.svg';\nimport Inbox from '../assets/images/inbox.svg';\nimport Invoices from '../assets/images/invoices.svg';\nimport Settings from '../assets/images/settings.svg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPoll, faUser, faComments, faCalendarAlt, faTable} from '@fortawesome/free-solid-svg-icons'\nimport './index.scss'\n\nfunction Sidebar() {\n  return (\n    <div className=\"Sidebar\">\n      <div className=\"Sidebar__header\">\n        <h1>IMPEKABLE</h1>\n      </div>\n      <div className=\"Sidebar__menu\">\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <img src={Home} alt=\"\" />\n          <p>Home</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <FontAwesomeIcon icon={faPoll} />\n          <p>Dashboard</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <img src={Inbox} alt=\"\" />\n          <p>Inbox</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <FontAwesomeIcon icon={faTable} />\n          <p>Products</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <img src={Invoices} alt=\"\" />\n          <p>Invoices</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <FontAwesomeIcon icon={faUser} />\n          <p>Customers</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <FontAwesomeIcon icon={faComments} />\n          <p>Chat Room</p>\n        </div>\n        <div className=\"Sidebar__menu__item Sidebar__menu__item__active\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <FontAwesomeIcon icon={faCalendarAlt} />\n          <p>Calendar</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <img src={Help} alt=\"\" />\n          <p>Help Center</p>\n        </div>\n        <div className=\"Sidebar__menu__item\">\n          <div className=\"Sidebar__menu__item__bookmark\"></div>\n          <img src={Settings} alt=\"\" />\n          <p>Settings</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport './index.scss';\nimport Search from '../assets/images/search.svg';\nimport Help from '../assets/images/help.svg';\nimport Badge from '../assets/images/badge.svg';\nimport Arrow from '../assets/images/arrow.svg';\nimport Avatar from '../assets/images/avatar.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComments, faBell } from '@fortawesome/free-solid-svg-icons'\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n      <div className=\"Header__inputSection\">\n        <img src={Search} alt=\"\" />\n        <input type=\"text\" name=\"\" placeholder=\"Search transactions, invoices or help\" />\n      </div>\n      <div className=\"Header__accountSection\">\n        <img src={Help} alt=\"\" />\n        <FontAwesomeIcon icon={faComments} />\n        <div className=\"Header__accountSection__notifications\">\n          <FontAwesomeIcon icon={faBell} />\n          <img src={Badge} alt=\"\" />\n        </div>\n        <div className=\"Header__accountSection__vr\"></div>\n        <p>John Doe</p>\n        <img src={Arrow} alt=\"\" />\n        <img className=\"Header__accountSection__avatar\" src={Avatar} alt=\"\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n","\nlet eventGuid = 0\nlet todayStr = new Date().toISOString().replace(/T.*$/, '') // YYYY-MM-DD of today\n\nexport const INITIAL_EVENTS = [\n  {\n    id: createEventId(),\n    title: 'All-day event',\n    start: todayStr\n  },\n  {\n    id: createEventId(),\n    title: 'Timed event',\n    start: todayStr + 'T12:00:00',\n    extendedProps: {\n      halo: \"dsaf\"\n    }\n  }\n]\n\nexport function createEventId() {\n  return String(eventGuid++)\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport moment from 'moment-timezone';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClock, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { createEventId } from '../event-utils'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { TextField, InputAdornment, FormControlLabel, Checkbox } from '@material-ui/core';\nimport './index.scss'\n\nfunction Popup(props) {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [allDay, setAllDay] = useState(true);\n  const [title, setTitle] = useState('');\n  const [time, setTime] = useState(\"12:00\");\n  const [note, setNote] = useState('');\n  const [id, setId] = useState(createEventId())\n  useEffect (() => {\n    if(props.popupData.selectInfo != null && props.popupState === \"creating\") {\n      setSelectedDate(moment(props.popupData.selectInfo.startStr));\n      setAllDay(props.popupData.selectInfo.startStr.length <= 10)\n      if(props.popupData.selectInfo.startStr.length > 10) setTime(moment.utc(new Date(props.popupData.selectInfo.startStr).getHours()*3600*1000).format('HH:mm'))\n    }\n    if(props.popupData.selectInfo != null && props.popupState === \"editing\") {\n        setTitle(props.popupData.selectInfo.event._def.title);\n        setNote(props.popupData.selectInfo.event.extendedProps.note);\n        setAllDay(props.popupData.selectInfo.event.allDay);\n        setId(props.popupData.selectInfo.event.id);\n        setSelectedDate(props.popupData.selectInfo.event._instance.range.start)\n        setTime(moment.utc(new Date(props.popupData.selectInfo.event._instance.range.start).getHours()*3600*1000).subtract(3, \"hours\").format('HH:mm'))\n    }\n    return;\n  }, [props]);\n  const save = () => {\n    let start = moment(selectedDate).format().substr(0,10);\n    let event = {\n      id,\n      title,\n      start: allDay ? start : moment(new Date(`${start} ${time}`)).tz('Europe/Kyiv').format(),\n      allDay,\n      extendedProps: {\n        note\n      }\n    };\n    if(props.popupState === \"creating\") {\n      props.popupData.calendarApi.addEvent(event)\n    } else {\n      props.popupData.selectInfo.event.remove();\n      props.popupData.selectInfo.view.calendar.addEvent(event)\n    }\n    props.closePopup()\n  }\n\n  const discard = () => {\n    if(props.popupState === \"creating\") {\n    } else {\n      props.popupData.selectInfo.event.remove();\n    }\n    props.closePopup()\n  }\n\n  return (\n    <div className=\"Popup\" style={{position: \"absolute\", left: props.popupData.selectInfo.jsEvent.pageX, top: props.popupData.selectInfo.jsEvent.pageY}}>\n      <FontAwesomeIcon className=\"Popup__cross\" onClick={props.closePopup} icon={faTimesCircle} />\n      <svg className=\"Popup__triangle\" width=\"10px\" height=\"11px\">\n        <path\n              d=\"M 1,10 L 5,1 L 9,10 z\"\n            fill={props.popupState === \"creating\" ? \"#43425D\" : 'white'}\n            stroke=\"#43425D\"\n            stroke-width=\"1\"/>\n      </svg>\n      <TextField\n        label=\"event name\"\n        value={title}\n        onChange={e => setTitle(e.target.value.substr(0, 30))}\n        className=\"Popup__item\"\n      />\n      <div className=\"Popup__datepickerContainer\">\n        <MuiPickersUtilsProvider className=\"Popup__item Popup__datepicker\" utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"event date\"\n            value={selectedDate}\n            onChange={setSelectedDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </div>\n      <FormControlLabel\n        className=\"Popup__checkbox\"\n        control={\n          <Checkbox\n            checked={allDay}\n            onChange={() => setAllDay(!allDay)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"All day\"\n      />\n      {allDay ? null : (\n        <div className='Popup__timeContainer'>\n          <TextField\n             className=\"Popup__item\"\n             id=\"time\"\n             label=\"event time\"\n             type=\"time\"\n             value={time}\n             onChange={e => setTime(e.target.value)}\n             endAdornment={\n                   <InputAdornment position=\"end\">\n                     <FontAwesomeIcon icon={faClock} />\n                   </InputAdornment>\n                 }\n             defaultValue=\"12:00\"\n             InputLabelProps={{\n               shrink: true,\n             }}\n             inputProps={{\n               step: 1800,\n             }}\n           />\n        </div>\n      )}\n      <TextField\n        label=\"notes\"\n        value={note}\n        className=\"Popup__item Popup__note\"\n        onChange={e => setNote(e.target.value)}\n      />\n      <div className=\"Popup__controls\">\n        <button className=\"Popup__controls__cancel\" onClick={discard} type=\"button\">{props.popupState === 'creating' ? 'cancel' : 'delete'}</button>\n        <button className=\"Popup__controls__save\" onClick={save} type=\"button\">save</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Popup;\n","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { INITIAL_EVENTS } from './event-utils'\nimport './index.scss';\n\nimport Popup from './Popup';\n\nexport default class DemoApp extends React.Component {\n\n  state = {\n    weekendsVisible: true,\n    currentEvents: [],\n    popupState: 'inactive',\n    popupData: {\n      calendarApi: null,\n      selectInfo: null,\n    }\n  }\n\n  render() {\n    return (\n      <div className='demo-app'>\n        <div className='demo-app-main'>\n          <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={{\n              left: 'today,prev,next',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay,Agenda'\n            }}\n            customButtons= {{\n              Agenda: {\n                text: 'Agenda',\n                click: function() {\n                  alert('clicked the agenda button!');\n                }\n              }\n            }}\n            buttonText={{\n              today: 'Today',\n              prev : 'Back',\n              next: \"Next\"\n            }}\n            initialView='dayGridMonth'\n            slotLabelFormat= {[{\n              hour: 'numeric',\n              minute: '2-digit',\n              hour12:true\n            }]}\n            slotDuration='01:00:00'\n            expandRows={true}\n            editable={true}\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            weekends={this.state.weekendsVisible}\n            initialEvents={INITIAL_EVENTS}\n            select={this.handleDateSelect}\n            eventContent={renderEventContent}\n            eventClick={this.handleEventClick}\n            eventsSet={this.handleEvents}\n          />\n          {this.state.popupState !== 'inactive' ? (\n            <Popup popupState={this.state.popupState} popupData={this.state.popupData} closePopup={this.closePopup} />\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n\n  handleWeekendsToggle = () => {\n    this.setState({\n      weekendsVisible: !this.state.weekendsVisible\n    })\n  }\n\n  handleDateSelect = (selectInfo) => {\n    this.closePopup();\n    let calendarApi = selectInfo.view.calendar\n    calendarApi.unselect()\n    this.setState({\n      popupState: \"creating\",\n      popupData: {\n        calendarApi,\n        selectInfo\n      }\n    })\n  }\n\n  closePopup = () => {\n    this.setState({\n      popupState: 'inactive',\n      popupData: {\n        calendarApi: null,\n        selectInfo: null,\n      }\n    })\n  }\n\n  handleEventClick = (clickInfo) => {\n    this.closePopup();\n    this.setState({\n      popupState: \"editing\",\n      popupData: {\n        calendarApi: null,\n        selectInfo: clickInfo\n      }\n    })\n  }\n\n  handleEvents = (events) => {\n    this.setState({\n      currentEvents: events\n    })\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  )\n}\n","import React from 'react';\nimport './App.scss'\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport Calendar from './Calendar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar/>\n      <section>\n        <Header/>\n        <h1>Calendar</h1>\n        <Calendar />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/help.9d698f62.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.b209ae38.svg\";","module.exports = __webpack_public_path__ + \"static/media/inbox.1255e31e.svg\";","module.exports = __webpack_public_path__ + \"static/media/invoices.353a2ee3.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.732d77b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.9b15ce11.svg\";","module.exports = __webpack_public_path__ + \"static/media/badge.ba1f87bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.e1ad04b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.84b85e8d.png\";"],"sourceRoot":""}